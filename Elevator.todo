Behavior Problems:
	☐	Now I'm failing challenge 5! :( 3 out of 4 times

	☐	the wait time is too long for challenge 13
		☐	empty elevators get stuck when going up - they only move when a person gets in, not when a person wants to go up or down from a floor
		☐	does this happen every time? Does it ever happen to an elevator going down?
		☐	it doesn't seem to happen every time.
		☐	it happens at the beginning; the elevators wait for people to get in before they move
		☐	maybe elevators get stuck when they somehow have a destination but don't go to it? So they're never idling?
		☐	maybe most of the elevators should only go up as far as their passengers want, and then they go back down, picking people up along the way...
	☐	I have no way for elevators to communicate with each other or work together.
	☐	I have no way to differentiate between elevators and designate certain ones to behave in a certain way

Do next:
	☐	have the elevator go to the highest floor button pressed, only stopping for people going up?  And then come down, so it can pick people up and drop them off in one stop?
Future:
	☐	test this: I could try having the elevator switch to the down position if it tries everything and comes back empty. It won't fix everything but it will at least make it easier to load. Maybe it can just turn on the down light and be at both, in case it's on the bottom floor.
	☐	I could make a separate place to keep track of the floors that elevators are going to - and when they get to a floor, they can clear it from both that list and from the buttons list.
	☐	test if each person pushes the button or just the first person
	☐	Maybe I want to take the sequencing logic out of the position object, so that I can have multiple different versions (maybe some elevators try going down first, etc.)
	☐	maybe every elevator can just have a floor and a heading...
		☐	a stopped elevator has a current floor and a "destination" heading.
		☐	a moving elevator has an origin floor, a destination floor and a current heading.  But it might also have a "destination" heading if it intends to change direction when it reaches the destination floor.
	☐	give each elevator it's own load threshold based on capacity
















＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
	✔	put in comments to try to diagnose the stuck elevator problem @done (18-05-10 15:19) @project(Do next)
	✔	add elevator number @done (18-05-10 15:19) @project(Do next)
	✔	I could have the floor buttons request an elevator somehow... @done (18-05-10 15:19) @project(Do next)
	✔	make a wrapper for the elevator object that stores an elevator number and calls the elevator functions @done (18-05-09 13:58) @project(Do next)
	✔	So the elevators idle, but then they stop. They don't keep doing the idle thing. @done (18-05-09 13:58) @project(Do next)
	✔	I can make chatty an elevator attribute, so I can track only one elevator and hope it gets stuck... @done (18-05-09 13:58) @project(Do next)
	✔ Problem: the idle function gets passed into the elevator object, which doesn't have access to the controller methods. @done (18-05-09 13:45) @project(Do next)
	✔	So only the first elevator said stuff at the beginning, but when I told them all to go up, they all talked.  But they're not supposed to be chatty!  How did they come to be chatty? @done (18-05-09 13:45) @project(Do next)
	✔	Looks like it worked! :D @done (18-05-09 13:45) @project(Do next)
	✔	I could try passing the whole controller in - is that recursive? Would it break something? @done (18-05-09 13:45) @project(Do next)
	✔	Hah, I had a global say function :P @done (18-05-09 13:45) @project(Do next)
	✔	okay, so I have a floorsWanted array but it doesn't even do anything right now. I think I could just take it out completely. @done (18-05-09 12:08) @project(Do next)
	✔	get rid of the floorsWanted array @done (18-05-09 12:07) @project(Do next)
	✔	the elevator waits for a person to get in instead of going to get more people @done (18-05-08 19:08) @project(Behavior Problems)
	✔	the elevator gets full but keeps trying to pick people up @done (18-05-08 19:07) @project(Behavior Problems)
	✔	the elevator gets stuck when the floor it is on has people who want to get on, but it is full. @done (18-05-06 22:56) @project(Behavior Problems)
	✔	the elevator stops on an up trip at a floor where the people want to go down @done (18-05-06 21:14) @project(Behavior Problems)
	✔	have tryFloor check if the elevator is loaded @done (18-05-06 21:14) @project(Do next)
	✔	Make a function to check if the elevator is fully loaded or not @done (18-05-06 21:14) @project(Do next)
	✔	have tryFloor check if the elevator is wanted for up or for down @done (18-05-06 20:33) @project(Do next)
	✔ indicateUp: @done (18-05-06 19:08)
	✔	get the timing right on the indicators so people get on @done (18-05-06 19:08) @project(Loading)
	✔	change the go function so it takes a position instead of a floor @done (18-05-06 19:08) @project(Do next)
	✔	Update elevator indicators to match new position @done (18-05-06 19:08) @project(Do next)
	✔	the elevator gets stuck on the top floor because it doesn't turn off its up status light @done (18-05-06 19:07) @project(Behavior Problems)
	✔	the elevator doesn't use the down status light even when it gets to the top floor @done (18-05-06 19:07) @project(Behavior Problems)
	✔	incorporate position logic into tryFloors @done (18-05-06 18:24) @project(Do next)
	✔	Make tryFloor do nothing if the position matches the current position @done (18-05-06 18:24) @project(Do next)
	✔	I could make a position object that contains a floor number and a direction @done (18-05-06 16:32) @project(Do next)
	✔	I can make a function called "nextFloorNum" that returns the proper floor num given the current (or any) floor @done (18-05-06 16:21) @project(tryFloor)
	✔ for each floor, store a set of values: {elevator: true, up: true, down: false} @done (18-05-04 17:49) @project(tryFloor)
	✔ Open Questions: @done (18-05-04 17:49)
	✔ Buttons Array: @done (18-05-04 17:49)
	✔	if the elevator button is pressed, go to the floor @done (18-05-04 17:49) @project(tryFloor)
	✔	have the events change them and the elevator change them @done (18-05-04 17:49) @project(tryFloor)
	✔	check syntax @done (18-05-04 17:49) @project(tryFloor)
	✔	What should the idle event be? @done (18-05-04 17:49) @project(tryFloor)
	✔ new logic: set up and down indicator and use to track elevator intent @done (18-05-04 12:23)
